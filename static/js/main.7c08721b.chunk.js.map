{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","allTodos","App","useState","setTitle","setUser","setTodos","userError","setUserError","titleError","setTitleError","action","method","onSubmit","e","preventDefault","newId","Math","max","item","newTodos","onFocus","type","placeholder","value","onChange","event","target","disabled","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c08721b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\n  <>\n    <article className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  </>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoType = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<TodoType> = ({ todos }) => (\n  <>\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  </>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const allTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [todos, setTodos] = useState(allTodos);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleClear = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const newId = Math.max(...todos.map((item) => item.id)) + 1;\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user || !title) {\n      return;\n    }\n\n    const newTodos = {\n      title,\n      user: getUser(user),\n      completed: false,\n      id: newId,\n      userId: user,\n    };\n\n    setTodos([...todos, newTodos]);\n    handleClear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          Title:\n          {' '}\n          <input\n            onFocus={() => setTitleError(false)}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          User:\n          {' '}\n          <select\n            onFocus={() => setUserError(false)}\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={event => setUser(+event.target.value)}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(users => (\n              <option\n                key={users.id}\n                value={users.id}\n              >\n                {users.name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}